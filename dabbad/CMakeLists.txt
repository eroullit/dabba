PROJECT(dabbad C)

FIND_PACKAGE(Doxygen)
FIND_PACKAGE(Setcap REQUIRED)
FIND_PACKAGE(NL REQUIRED)
INCLUDE(Pod2Man)

INCLUDE(FindDebArch)

SET(CPACK_SOURCE_GENERATOR "TGZ")
SET(CPACK_GENERATOR "TGZ;DEB;RPM")
SET(CPACK_RESOURCE_FILE_README "${CMAKE_SOURCE_DIR}/README")
SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_SOURCE_DIR}/LICENSE")
SET(CPACK_PACKAGE_DESCRIPTION_FILE "${CPACK_RESOURCE_FILE_README}")
SET(CPACK_PACKAGE_VERSION_MAJOR "0")
SET(CPACK_PACKAGE_VERSION_MINOR "3")
SET(CPACK_PACKAGE_VERSION "${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}")
SET(CPACK_PACKAGE_FILE_NAME "${PROJECT_NAME}_${CPACK_PACKAGE_VERSION}_${CPACK_DEBIAN_PACKAGE_ARCHITECTURE}")
SET(CPACK_SOURCE_PACKAGE_FILE_NAME "${PROJECT_NAME}_${CPACK_PACKAGE_VERSION}_orig")
SET(CPACK_DEBIAN_PACKAGE_DEPENDS "libc6, libnl-3-dev, libnl-genl-3-dev, libnl-route-3-dev, libdabba, libdabba-rpc")
SET(CPACK_PACKAGE_VENDOR "Emmanuel Roullit")
SET(CPACK_PACKAGE_CONTACT "${CPACK_PACKAGE_VENDOR} <emmanuel.roullit@gmail.com>")
SET(CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA "${CMAKE_SOURCE_DIR}/debian/postinst;${CMAKE_SOURCE_DIR}/debian/shlibs")
SET(CPACK_DEBIAN_PACKAGE_DESCRIPTION
"dabbad - multi-threaded task manager and RPC query processor"
)
SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "Multi-threaded task manager daemon and RPC query processor.")
SET(CPACK_PACKAGE_DESCRIPTION "dabbad is a multi-threaded task manager and RPC query processor daemon.")
SET(CPACK_DEBIAN_PACKAGE_PRIORITY "optional")
SET(CPACK_DEBIAN_PACKAGE_SECTION "net")
SET(CPACK_STRIP_FILES ON)
SET(CPACK_SOURCE_IGNORE_FILES "/build/;/.git/;/.gitignore;/*.swp;~$;${CPACK_SOURCE_IGNORE_FILES}")
SET(CPACK_INSTALL_CMAKE_PROJECTS "${CMAKE_CURRENT_BINARY_DIR}" "${PROJECT_NAME}" "ALL" "*")
SET(CPACK_OUTPUT_CONFIG_FILE "CPack-config-${PROJECT_NAME}.cmake")

INCLUDE(CPack)

FILE(GLOB DABBAD_HDRS ${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/include/${PROJECT_NAME}/*.h)

INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/${PROJECT_NAME}/include
                        ${CMAKE_SOURCE_DIR}/libdabba/include
			${NL_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/libdabba-rpc/include)
INCLUDE_DIRECTORIES(${LIBDABBA_RPC_INCLUDE_DIR})

IF(DOXYGEN_FOUND)
	CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile.in ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile @ONLY)
	ADD_CUSTOM_TARGET(${PROJECT_NAME}-doc ${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})
	ADD_DEPENDENCIES(doc ${PROJECT_NAME}-doc)
ENDIF(DOXYGEN_FOUND)

ADD_EXECUTABLE(${PROJECT_NAME}
	dabbad.c
	interface.c
	interface-status.c
	interface-driver.c
	interface-pause.c
	interface-offload.c
	interface-settings.c
	interface-coalesce.c
	interface-capabilities.c
	interface-statistics.c
	rpc.c
	help.c
	capture.c
	misc.c
	thread.c
)

TARGET_LINK_LIBRARIES (${PROJECT_NAME} libdabba libdabba-rpc ${CMAKE_THREAD_LIBS_INIT} ${NL_LIBRARIES})

POD2MAN(${CMAKE_CURRENT_SOURCE_DIR}/dabbad.c dabbad 8)

INSTALL(FILES ${DABBAD_HDRS} DESTINATION include/dabbad COMPONENT headers)
INSTALL(TARGETS ${PROJECT_NAME} DESTINATION sbin COMPONENT applications)
INSTALL(CODE "EXECUTE_PROCESS(COMMAND ${SETCAP_EXECUTABLE} cap_net_raw,cap_ipc_lock,cap_net_admin=eip ${CMAKE_INSTALL_PREFIX}/sbin/${PROJECT_NAME})")

ADD_CUSTOM_TARGET(${PROJECT_NAME}-setcap COMMAND ${SETCAP_EXECUTABLE} cap_sys_nice,cap_net_raw,cap_ipc_lock,cap_net_admin=eip ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME})
ADD_DEPENDENCIES(setcap ${PROJECT_NAME}-setcap)
