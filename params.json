{"note":"Don't delete this file! It's used internally to help with page regeneration.","body":"# What is dabba?\r\n\r\ndabba is a set of network tools written for Linux.\r\n\r\nIts main use is to gather or scatter actions on a network such as\r\ntraffic capture, replay, generation or monitoring on a network.\r\n\r\nThis is inspired on the Dabba Walla system present in Mumbai where\r\nmeals are regrouped and dispatched throughout the city with a\r\nhigh efficiency rate, every day of the year.\r\n\r\nThe project has 3 main components:\r\n* `libdabba` - low-level zero-copy network library\r\n* `dabbad` - multi-threaded task manager and IPC query processor\r\n* `dabba` - CLI 'Ã  la git' to communicate with dabbad and submit tasks\r\n\r\n# What is libdabba's goal?\r\n\r\nlibdabba's goal is to prepare a clear and simple API for future networking tools.\r\nIt uses low-level zero-copy kernel features to bring traffic between the\r\nuserspace and the kernelspace with very low overhead.\r\n\r\nRight now, it provides functions to perform:\r\n* Multi-threaded traffic capture\r\n* PCAP file support\r\n\r\n# What is a zero-copy feature?\r\n\r\nZero-copy packet rings are memory-mapped buffers common to kernelspace and\r\nuserspace where packets can be directly read or written.\r\nThis direct way of data access drastically reduces the processing overhead \r\nas packets are not hard-copied between spaces.\r\nWhen using a RX packet ring, received packets are quicker available\r\nto the userspace.\r\nWhen a TX packet ring is used, packets to transmit can be placed to\r\nmedium within shorter time.\r\n\r\n# What is a PCAP file?\r\n\r\nA PCAP file is a file where previously recorded packets are saved.\r\nIt can be then read to perform protocol analysis, reverse engineering\r\nor network debugging.\r\ndabba will stay independent of libpcap, but nevertheless offer PCAP file support\r\nto capture, replay and perform off-line analysis on recorded traffic.\r\n\r\n# Development\r\n\r\nThere is a [public Git repository](http://github.com/eroullit/dabba)\r\nwhere you can check out the latest code base.\r\n```\r\ngit clone git://github.com/eroullit/dabba.git\r\n```\r\n\r\n# Installation\r\n\r\nYou need to fulfill these prerequisites in order to build dabba:\r\n* Linux kernel >= 2.6.31\r\n* `cmake`\r\n* `setcap` (within libcap package)\r\n\r\nThe following are optional but recommended:\r\n* `python-yaml`\r\n* `doxygen`\r\n\r\nTo build out-of-tree:\r\n```\r\n$ mkdir build\r\n$ cd build\r\n$ cmake ..\r\n$ make\r\n# make install/strip\r\n```\r\n# Copyright\r\n\r\nCopyright (C) 2012\tEmmanuel Roullit <emmanuel.roullit@gmail.com>\r\n\r\nThis program is free software; you can redistribute it and/or modify\r\nit under the terms of the GNU General Public License as published by\r\nthe Free Software Foundation; either version 2 of the License, or (at\r\nyour option) any later version.\r\n\r\nThis program is distributed in the hope that it will be useful, but\r\nWITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\r\nor FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\r\nfor more details.\r\n\r\nYou should have received a copy of the GNU General Public License along\r\nwith this program; if not, write to the Free Software Foundation, Inc.,\r\n51 Franklin St, Fifth Floor, Boston, MA 02110, USA\r\n\r\n# Contact\r\n\r\nFor questions:\r\n    Send me a message [on GitHub](https://github.com/eroullit)\r\n\r\nFor bugs:\r\n    Open an issue on the [bug tracker](https://github.com/eroullit/dabba/issues).","name":"Dabba","google":"","tagline":""}