package dabba;

message interface_id
{
    required string name = 1;
}

message interface_id_list
{
    repeated interface_id list = 1;
}

message interface_status
{
    required interface_id id = 1;
    optional bool up = 2;
    optional bool running = 3;
    optional bool promiscous = 4;
    optional bool loopback = 5;
    optional bool connectivity = 6;
}

message interface_status_list
{
    repeated interface_status list = 1;
}

message interface_driver
{
    required interface_id id = 1;
    optional string name = 2;
    optional string version = 3;
    optional string fw_version = 4;
    optional string bus_info = 5;
}

message interface_driver_list
{
    repeated interface_driver list = 1;
}

message interface_pause
{
    required interface_id id = 1;
    optional uint32 autoneg = 2;
    optional uint32 rx_pause = 3;
    optional uint32 tx_pause = 4;
}

message interface_pause_list
{
    repeated interface_pause list = 1;
}

message interface_offload
{
    required interface_id id = 1;
    optional uint32 rx_csum = 2;
    optional uint32 tx_csum = 3;
    optional uint32 sg = 4;
    optional uint32 tso = 5;
    optional uint32 ufo = 6;
    optional uint32 gso = 7;
    optional uint32 gro = 8;
    optional uint32 lro = 9;
    optional uint32 rxhash = 10;
}

message interface_offload_list
{
    repeated interface_offload list = 1;
}

message interface_settings
{
    required interface_id id = 1;
    optional uint32 speed = 2;
    optional bool duplex = 3;
    optional bool autoneg = 4;
    optional uint32 mtu = 5;
    optional uint32 tx_qlen = 6;
    optional uint32 port = 7;
    optional uint32 maxrxpkt = 8;
    optional uint32 maxtxpkt = 9;
}

message interface_settings_list
{
    repeated interface_settings list = 1;
}

message dummy
{
    optional int32 unused = 1;
}

service dabba_service
{
    rpc interface_status_get (interface_id_list) returns (interface_status_list);
    rpc interface_driver_get (interface_id_list) returns (interface_driver_list);
    rpc interface_pause_get (interface_id_list) returns (interface_pause_list);
    rpc interface_offload_get (interface_id_list) returns (interface_offload_list);
    rpc interface_settings_get (interface_id_list) returns (interface_settings_list);
    rpc interface_id_get (dummy) returns (interface_id_list);
}
